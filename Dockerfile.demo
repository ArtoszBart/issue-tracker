FROM node:18-alpine3.19 AS base

# ===================================================================

# Install dependencies only when needed
FROM base AS dependencies
RUN apk add --no-cache libc6-compat

WORKDIR /app

# Install dependencies
COPY package*.json ./
RUN npm install

# ===================================================================

# Rebuild the source code only when needed
FROM base AS builder

WORKDIR /app
COPY --from=dependencies /app/node_modules ./node_modules
COPY . .

ENV NEXT_TELEMETRY_DISABLED=1

# Generating prisma client for application build
RUN npx prisma generate
# Building application
RUN npm run build

# ===================================================================

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/docker-entrypoint.demo.sh ./docker-entrypoint.demo.sh

USER nextjs

# Ustawienie skryptu startowego
CMD ["npm", "start"]
